// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}


generator docs {
  provider = "node node_modules/prisma-docs-generator"
  output = "../docs/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                       String                     @id @unique @default(cuid())
  username                 String                     @unique
  email                    String                     @unique
  password                 String
  isAdmin                  Boolean                    @default(false)
  createdAt                DateTime                   @default(now())
  ActionTriggers           ActionTrigger[]
  UsersHasActionsReactions UsersHasActionsReactions[]
}

model Service {
  id          String     @id @unique @default(cuid())
  name        String     @unique
  description String?
  isEnable    Boolean    @default(false)
  createdAt   DateTime   @default(now())
  Actions     Action[]
  Reactions   Reaction[]
}

model Action {
  id                       String                     @id @unique @default(cuid())
  name                     String
  description              String?
  isEnable                 Boolean                    @default(false)
  createdAt                DateTime                   @default(now())
  Service                  Service                    @relation(fields: [serviceId], references: [id])
  serviceId                String
  UsersHasActionsReactions UsersHasActionsReactions[]
}

model Reaction {
  id                       String                     @id @unique @default(cuid())
  name                     String
  description              String?
  isEnable                 Boolean                    @default(false)
  createdAt                DateTime                   @default(now())
  Service                  Service                    @relation(fields: [serviceId], references: [id])
  serviceId                String
  UsersHasActionsReactions UsersHasActionsReactions[]
}

model ActionTrigger {
  id          String   @id @unique @default(cuid())
  name        String
  description String?
  createdAt   DateTime @default(now())
  Users       User[]
}

model UsersHasActionsReactions {
  id         String   @id @unique @default(cuid())
  User       User     @relation(fields: [userId], references: [id])
  Action     Action   @relation(fields: [actionId], references: [id])
  Reaction   Reaction @relation(fields: [reactionId], references: [id])
  isEnable   Boolean  @default(true)
  createdAt  DateTime @default(now())
  userId     String
  actionId   String
  reactionId String
}
